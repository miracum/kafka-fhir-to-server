plugins {
    id "org.springframework.boot" version "3.0.1"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "java"
    id "jacoco"
    id "com.diffplug.spotless" version "6.2.0"
}

group = "org.miracum.streams"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "17"

repositories {
    mavenCentral()
}

ext {
    set("springCloudVersion", "2021.0.0")
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    implementation "org.springframework.cloud:spring-cloud-stream"
    implementation "org.springframework.cloud:spring-cloud-stream-binder-kafka"
    implementation "org.springframework.kafka:spring-kafka"

    implementation "org.apache.kafka:kafka-streams"

    implementation "io.micrometer:micrometer-registry-prometheus:1.8.2"
    implementation "io.micrometer:micrometer-core:1.8.2"

    implementation "org.miracum:kafka-fhir-serializer:1.0.2"

    implementation "net.logstash.logback:logstash-logback-encoder:7.0.1"

    implementation "ca.uhn.hapi.fhir:hapi-fhir-base:5.6.2"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-client:5.6.2"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-structures-r4:5.6.2"
    implementation "ca.uhn.hapi.fhir:hapi-fhir-client-okhttp:5.6.2"

    implementation "com.github.ben-manes.caffeine:caffeine:3.0.5"

    implementation "org.fhir:ucum:1.0.3"

    implementation "io.opentracing.contrib:opentracing-spring-jaeger-cloud-starter:3.3.1"
    implementation "io.opentracing.contrib:opentracing-okhttp3:3.0.0"
    implementation "io.opentracing.contrib:opentracing-kafka-spring:0.1.15"

    implementation "io.jaegertracing:jaeger-client:1.8.0"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jar {
    enabled = false
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        html.required = true
        xml.required = false
        csv.required = true
    }
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat()
    }
}
