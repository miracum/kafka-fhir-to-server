services:
  fhir:
    image: docker.io/hapiproject/hapi:v6.8.0@sha256:b376ef983c54757aff719b17e97301eab43198564d23f2aa9609e9b5f83fa85f
    environment:
      HAPI_FHIR_VALIDATION_REQUESTS_ENABLED: "true"
      HAPI_FHIR_SUBSCRIPTION_RESTHOOK_ENABLED: "false"
      HAPI_FHIR_FHIR_VERSION: "R4"
      HAPI_FHIR_CORS_ALLOWCREDENTIALS: "false"
      HAPI_FHIR_CORS_ALLOWED_ORIGIN: "*"
    ports:
      - 8082:8080

  kafka:
    image: docker.io/bitnami/kafka:3.5.1@sha256:4ae02a961db7c19415061f3e15bc3dfcae6e33cd6b0a8ad6250a737a9d906739
    restart: unless-stopped
    cap_drop:
      - ALL
    privileged: false
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    environment:
      KAFKA_CFG_NODE_ID: "0"
      KAFKA_RAFT_CLUSTER_ID: "kafka-fhir-to-server"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_MESSAGE_MAX_BYTES: "31457280"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    ports:
      - 9094:9094

  akhq:
    image: docker.io/tchiotludo/akhq:0.24.0@sha256:6ccf8323ae6e93a893107f857cd9f7210add3569743b2c8528c6567967cc636f
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka:
              properties:
                bootstrap.servers: "kafka:9092"
    ports:
      - 9000:8080
    depends_on:
      - kafka

  mock-data-loader:
    image: docker.io/confluentinc/cp-kafkacat:7.1.9@sha256:97584651f761151dde33a90321ee09ca0a1f2e5be2075ddf88379bad78b60148
    entrypoint: ["/bin/bash", "-c"]
    restart: on-failure
    command:
      [
        "while true; do kafkacat -b kafka:9092 -t fhir-msg -P -l /data/mock-data.ndjson; sleep 5; done",
      ]
    volumes:
      - ${PWD}/hack/mock-data.ndjson:/data/mock-data.ndjson:ro
    depends_on:
      - kafka
